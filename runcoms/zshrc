#!/bin/bash
# Variable declaration
ZSH_THEME="pragmata"
HIST_STAMPS="dd.mm.yyyy"
plugins=(git)


export NODEVERSION=$(node -v | cut -c 2-)
export NODEBIN=/usr/local/Cellar/node/$NODEVERSION/bin
export PATH=/usr/local/bin:$HOME/bin:/usr/local/sbin:$NODEBIN:$PATH
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

# All aliases
if lsd > /dev/null 2>&1; then
	alias ls='lsd'
else
	alias ls='ls -G'
fi
alias search='rg'
alias tree='lsd --tree'
alias cat='bat'
alias rvimtmp='rm -i `find . | grep .swp$`'
alias searchFiles='fd'

alias -g ...="../.."
alias -g ....="../../.."
alias -g .....="../../../.."

alias dm="docker-machine"
alias d="docker"
alias dps="docker ps"
alias dpsa="docker ps -a"
alias di="docker images"
alias dip="docker image prune"
alias dc="docker-compose"
alias dcu="docker-compose up"
alias dcud="docker-compose up -d"

function dbash { docker exec -it $1 /bin/bash; }
function dash { docker exec -it $1 /bin/ash; }
function dexec { docker exec -it $2 $1; }

alias kc="kubectl"

function dbuild_minikube {
  eval $(minikube docker-env) && $1
}
# Add rbenv to zsh
if which rbenv > /dev/null; then 
  eval "$(rbenv init -)";
fi
# Python environments
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi
if which pyenv-virtualenv-init > /dev/null 2>&1; then
  eval "$(pyenv virtualenv-init -)"
fi

# bash completion
#if [[ -f /usr/local/etc/bash_completion ]]; then
#  source /usr/local/etc/bash_completion
#fi

# docker machine
if [[ $(docker-machine status default) != "Stopped" ]]; then
  eval $(docker-machine env default)
fi
# Show lines of a specified file $3 starting at $1, ending with $2
showLines(){
  sed -n "$1,$2p" $3
}

#Alias for finding process by port and killing it
killPort(){
  lsof -ti tcp:$1 | xargs kill
}

# Create a directory and cd into it
walk(){
  mkdir -p $1
  cd $1
}

# Recursively remove all contents of a directory from
# within that directory, or by specifying it
close(){
  if [ -n "$1" ]; then
    rm -rf $1
  else
    rm -rf -- "$(pwd -P)" && cd ..
  fi
}

# VIM modes
bindkey -v
export EDITOR=vim

source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"
[ -f "/Users/nik/.ghcup/env" ] && source "/Users/nik/.ghcup/env" # ghcup-env
